<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Flappy Bird Clone</title>
<style>
  body, html {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0;
    background-color: #f0f0f0;
  }
  #e {
    border: solid 1px;
  }
  #game-over {
    display: none;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    font-family: Arial, sans-serif;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 20px;
    border-radius: 10px;
  }
  .score-text {
    font-size: 20px;
  }
</style>
</head>
<body>
<canvas id="e" width="320" height="480"></canvas>
<div id="game-over">
  <div class="score-text">Score: <span id="score"></span></div>
  <div class="score-text">High Score: <span id="high-score"></span></div>
  <button onclick="restartGame()">Restart</button>
</div>

<script>
  var m = Math,
      e = document.getElementById('e'),
      c = e.getContext('2d'),
      f = 0,
      t = 0;

  var highScore = localStorage.getItem('highScore') || 0;

  function r() {
    f = 1;
    k = 10;
    v = 0;
    var s = 0,
        w = [],
        i = 0,
        l = 0,
        g = setInterval(function() {
      if (!w[0] || w[w.length - 1].x < 20) {
        w.push({
          x: 80,
          h: ~~(m.random() * 80),
          q: 0
        });
      }
      if (w[0].x < -20) {
        w.shift();
      }
      v += 0.025;
      if (t > 0) {
        t -= 0.01;
        v = -0.75;
      }
      k += v;
      for (i in w) {
        w[i].x -= 0.2;
      }
      c.clearRect(0, 0, 320, 480);
      c.t('Score: ' + s, 160, 32);
      c.t('High Score: ' + highScore, 160, 60); // Display high score during gameplay
      c.beginPath();
      c.arc(140, (k + 5) * 4, 20, 0, 2 * m.PI);
      for (i in w) {
        l = w[i];
        c.rect(l.x * 4, 0, 80, l.h * 4);
        c.rect(l.x * 4, (l.h + 40) * 4, 80, 480);
      }
      c.stroke();
      for (i in w) {
        l = w[i];
        if (((40 > l.x && 10 < l.x) && (k < l.h || k > l.h + 30)) ||
            d(l.x, l.h) < 5 ||
            d(l.x + 20, l.h) < 5 ||
            d(l.x, l.h + 40) < 5 ||
            d(l.x + 20, l.h + 40) < 5 ||
            k > 110) {
          clearInterval(g);
          if (s > highScore) {
            highScore = s;
            localStorage.setItem('highScore', highScore);
          }
          showGameOver(s, highScore);
          f = 0;
          disableKeyboardInput(); // Disable keyboard input when game is over
        }
        if (!w[i].q && w[i].x < 40) {
          s += 1;
          w[i].q = 1;
        }
      }
    }, 10);
  }

  function d(x, y) {
    return m.sqrt((35 - x) * (35 - x) + m.pow(k + 5 - y, 2));
  }

  function showGameOver(score, highScore) {
    var gameOverDiv = document.getElementById('game-over');
    document.getElementById('score').innerText = score;
    document.getElementById('high-score').innerText = highScore; // Display high score on game over screen
    gameOverDiv.style.display = 'block';
  }

  function restartGame() {
    var gameOverDiv = document.getElementById('game-over');
    gameOverDiv.style.display = 'none';
    c.clearRect(0, 0, 320, 480);
    c.t('Hit space to start', 160, 240);
    enableKeyboardInput(); // Enable keyboard input when game is reset
  }

  function disableKeyboardInput() {
    window.onkeydown = null; // Remove event listener to disable keyboard input
  }

  function enableKeyboardInput() {
    window.onkeydown = function(e) {
      e.keyCode === 32 && (t = 0.1) && !f && r();
    };
  }

  enableKeyboardInput(); // Enable keyboard input initially

  c.font = 'bold 24px Arial';
  c.t = function(text, x, y) {
    var metrics = c.measureText(text);
    var textWidth = metrics.width;
    c.fillText(text, x - textWidth / 2, y);
  };

  c.t('Hit space to start', 160, 240);

</script>
</body>
</html>
